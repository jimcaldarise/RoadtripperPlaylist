[{"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/index.js":"1","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/reportWebVitals.js":"2","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/App.js":"3","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/SearchBar.js":"4","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/Playlist.js":"5","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/SearchResults.js":"6","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/TrackList.js":"7","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/Track.js":"8","/Users/jamescaldarise/Desktop/roadtrip_playlist/src/util/Spotify.js":"9"},{"size":514,"mtime":1647652801634,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1647649792611,"results":"12","hashOfConfig":"11"},{"size":2384,"mtime":1647650952622,"results":"13","hashOfConfig":"11"},{"size":4271,"mtime":1647650586273,"results":"14","hashOfConfig":"11"},{"size":799,"mtime":1647650849943,"results":"15","hashOfConfig":"11"},{"size":423,"mtime":1647650707155,"results":"16","hashOfConfig":"11"},{"size":583,"mtime":1647650802913,"results":"17","hashOfConfig":"11"},{"size":972,"mtime":1647650740746,"results":"18","hashOfConfig":"11"},{"size":2798,"mtime":1647899582485,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"9hlwru",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/index.js",[],[],["49","50"],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/reportWebVitals.js",[],[],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/App.js",[],[],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/SearchBar.js",[],[],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/Playlist.js",[],[],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/SearchResults.js",[],[],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/TrackList.js",[],[],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/Track.js",[],[],"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/util/Spotify.js",["51","52"],[],"import React from 'react';\nimport SearchBar from '../Components/SearchBar';\n\nconst clientId = \"177d4f9af5fa4136b5640d6fdd051e05\";\nconst redirectURI = 'http://localhost:3000/';\nlet accessToken;\n\nconst Spotify = {\n   getAccessToken() {\n      if(accessToken) {\n         return accessToken;\n      }\n\n      //check for an access token match\n      const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n      const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n      if(accessTokenMatch && expiresInMatch) {\n         accessToken = accessTokenMatch[1];\n         const expiresIn = Number(expiresInMatch[1]);\n\n         //clear the url parameters to grab a new access token when this\n         //one expires\n         window.setTimeout(() => accessToken = '', expiresIn * 1000);\n         window.history.pushState('Access Token', null, '/');\n         return accessToken;\n      } else {\n         const accessURL = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\n         window.location = accessURL;\n      }\n   },\n\n   search(term) {\n      const accessToken = Spotify.getAccessToken();\n      return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`,\n         { headers: {\n            Authorization: `Bearer ${accessToken}`\n            }\n         }\n      ).then(response => {\n         return response.json();\n      }).then(jsonResponse => {\n         if(!jsonResponse.tracks) {\n            return [];\n         }\n         return jsonResponse.tracks.items.map(track => ({\n            id: track.id,\n            name: track.name,\n            artists: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n         }));\n      });\n   },\n\n   savePlaylist(name, trackURIs) {\n      if(!name || !trackURIs.length) {\n         return;\n      }\n\n      const accessToken = Spotify.getAccessToken();\n      const headers = {Authorization: `Bearer ${accessToken}`};\n      let userId;\n\n      return fetch('https://api.spotify.com/v1/me', {headers: headers}\n      ).then(response => response.json()\n      ).then(jsonResponse => {\n         userId = jsonResponse.id;\n         return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n            headers: headers,\n            method: 'POST',\n            body: JSON.stringify({name: name})\n         }).then(response => response.json()\n         ).then(jsonResponse => {\n            const playlistId = jsonResponse.id;\n            return fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n               headers: headers,\n               method: 'POST',\n               body: JSON.stringify({uris: trackURIs})\n            })\n         })\n      })\n   }\n}\n\nexport default Spotify;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":17},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","no-global-assign","no-unsafe-negation"]