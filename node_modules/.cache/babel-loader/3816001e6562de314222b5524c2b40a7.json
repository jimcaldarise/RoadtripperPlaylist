{"ast":null,"code":"var _jsxFileName = \"/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/SearchBar.js\";\nimport React from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLEMAPSAPIKEY = 'AIzaSyAJYvujEFUYmA7us5B3_aajCRcfnWlDjX8';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      lat: null,\n      long: null,\n      cityName: null,\n      stateName: null\n    };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n    this.getCityState = this.getCityState.bind(this);\n    this.searchCity = this.searchCity.bind(this);\n    this.searchState = this.searchState.bind(this);\n  }\n\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  handleTermChange(event) {\n    this.setState({\n      term: event.target.value\n    });\n  }\n\n  getLocation() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    } else {\n      alert(\"Geolocation Not Available\");\n    }\n  }\n\n  getCoordinates(position) {\n    this.setState({\n      lat: position.coords.latitude,\n      long: position.coords.longitude\n    });\n    this.getCityState();\n  }\n\n  getCityState(position) {\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.lat},${this.state.long}&key=${GOOGLEMAPSAPIKEY}`).then(response => response.json()).then(data => {\n      if (data.results[0]) {\n        var components = data.results[0].address_components;\n\n        for (var component = 0; component < components.length; component++) {\n          if (components[component].types[0] === 'administrative_area_level_1') {\n            this.setState({\n              stateName: components[component].long_name\n            });\n          }\n\n          if (components[component].types[0] === 'locality') {\n            this.setState({\n              cityName: components[component].long_name\n            });\n          }\n        }\n      }\n    }).catch(error => alert(error));\n  }\n\n  searchCity(event) {\n    this.setState({\n      term: this.state.cityName\n    });\n    this.props.onSearch(this.state.cityName);\n  }\n\n  searchState(event) {\n    this.setState({\n      term: this.state.stateName\n    });\n    this.props.onSearch(this.state.stateName);\n  }\n\n  handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied request for Geolocation.\");\n        break;\n\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location information is unavailable.\");\n        break;\n\n      case error.TIMEOUT:\n        alert(\"Request for user location timed out.\");\n        break;\n\n      case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred.\");\n        break;\n\n      default:\n        alert(\"An unknown error occurred.\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FindButtonContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"SearchButton\",\n            onClick: this.getLocation,\n            children: \"FIND ME!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }, this), this.state.lat && this.state.long ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://maps.googleapis.com/maps/api/staticmap?center=${this.state.lat},${this.state.long}&zoom=12&size=400x400&key=${GOOGLEMAPSAPIKEY}`,\n            alt: \"map of current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"SearchButton\",\n              onClick: this.searchCity,\n              children: \"USE CURRENT CITY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"SearchButton\",\n              onClick: this.searchState,\n              children: \"USE CURRENT STATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.props.term,\n          onChange: this.handleTermChange,\n          placeholder: \"Enter a Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"SearchButton\",\n          onClick: this.search,\n          children: \"SEARCH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/jamescaldarise/Desktop/roadtrip_playlist/src/Components/SearchBar.js"],"names":["React","GOOGLEMAPSAPIKEY","SearchBar","Component","constructor","props","state","term","lat","long","cityName","stateName","search","bind","handleTermChange","getLocation","getCoordinates","getCityState","searchCity","searchState","onSearch","event","setState","target","value","navigator","geolocation","getCurrentPosition","alert","position","coords","latitude","longitude","fetch","then","response","json","data","results","components","address_components","component","length","types","long_name","catch","error","handleLocationError","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './SearchBar.css';\n\nconst GOOGLEMAPSAPIKEY = 'AIzaSyAJYvujEFUYmA7us5B3_aajCRcfnWlDjX8';\n\nclass SearchBar extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         term: '',\n         lat: null,\n         long: null,\n         cityName: null,\n         stateName: null\n      };\n\n      this.search = this.search.bind(this);\n      this.handleTermChange = this.handleTermChange.bind(this);\n      this.getLocation = this.getLocation.bind(this);\n      this.getCoordinates = this.getCoordinates.bind(this);\n      this.getCityState = this.getCityState.bind(this);\n      this.searchCity = this.searchCity.bind(this);\n      this.searchState = this.searchState.bind(this);\n   }\n\n   search() {\n      this.props.onSearch(this.state.term);\n   }\n\n   handleTermChange(event) {\n      this.setState({term: event.target.value});\n   }\n\n   getLocation() {\n      if(\"geolocation\" in navigator) {\n         navigator.geolocation.getCurrentPosition(this.getCoordinates);\n      } else {\n         alert(\"Geolocation Not Available\");\n      }\n   }\n\n   getCoordinates(position) {\n      this.setState({\n         lat: position.coords.latitude,\n         long: position.coords.longitude\n      })\n      this.getCityState()\n   }\n\n   getCityState(position) {\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.lat},${this.state.long}&key=${GOOGLEMAPSAPIKEY}`)\n      .then(response => response.json())\n      .then((data) => {\n         if(data.results[0]) {\n            var components = data.results[0].address_components;\n\n            for(var component=0; component<(components.length); component++) {\n               if(components[component].types[0]==='administrative_area_level_1') {\n                  this.setState({stateName: components[component].long_name\n                  })\n               }\n               if(components[component].types[0]==='locality') {\n                  this.setState({cityName: components[component].long_name\n                  })\n               }\n            }\n         }\n      })\n      .catch(error=> alert(error))\n   }\n\n   searchCity(event) {\n      this.setState({term: this.state.cityName});\n      this.props.onSearch(this.state.cityName);\n   }\n\n   searchState(event) {\n      this.setState({term: this.state.stateName});\n      this.props.onSearch(this.state.stateName);\n   }\n\n   handleLocationError(error) {\n      switch(error.code) {\n         case error.PERMISSION_DENIED:\n            alert(\"User denied request for Geolocation.\")\n            break;\n         case error.POSITION_UNAVAILABLE:\n            alert(\"Location information is unavailable.\")\n            break;\n         case error.TIMEOUT:\n            alert(\"Request for user location timed out.\")\n            break;\n         case error.UNKNOWN_ERROR:\n            alert(\"An unknown error occurred.\")\n            break;\n         default:\n            alert(\"An unknown error occurred.\")\n      }\n   }\n\n   render() {\n      return(\n         <div className='mainContainer'>\n            <div className='mapContainer'>\n               <div className='FindButtonContainer'>\n                  <button className='SearchButton' onClick={this.getLocation}>FIND ME!</button> \n               </div>\n               {\n                  this.state.lat && this.state.long ?\n                  <div className='map'>\n                     <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.state.lat},${this.state.long}&zoom=12&size=400x400&key=${GOOGLEMAPSAPIKEY}`} alt=\"map of current location\"/>\n                     <div className='Buttons'>\n                        <button className=\"SearchButton\" onClick={this.searchCity}>USE CURRENT CITY</button>\n                        <button className=\"SearchButton\" onClick={this.searchState}>USE CURRENT STATE</button>\n                     </div>\n                  </div>\n                  :\n                  null\n               }\n            </div>\n            <div className=\"SearchBar\">\n               <input value={this.props.term} onChange={this.handleTermChange} placeholder=\"Enter a Location\" />\n               <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\n            </div>\n         </div>\n      );\n   }\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}